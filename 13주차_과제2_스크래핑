{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/iktion/python_programming/blob/main/13%EC%A3%BC%EC%B0%A8_%EA%B3%BC%EC%A0%9C2_%EC%8A%A4%ED%81%AC%EB%9E%98%ED%95%91\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bc641b44",
      "metadata": {
        "id": "bc641b44"
      },
      "source": [
        "# 02-2 스크래핑 사용하기"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "077d748b",
      "metadata": {
        "id": "077d748b"
      },
      "outputs": [],
      "source": [
        "from bs4 import BeautifulSoup"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "QFu48fXVM1Z2"
      },
      "id": "QFu48fXVM1Z2"
    },
    {
      "cell_type": "markdown",
      "id": "880d52a6",
      "metadata": {
        "id": "880d52a6"
      },
      "source": [
        "## 전체 도서의 무게 구하기"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "d267046f",
      "metadata": {
        "id": "d267046f"
      },
      "outputs": [],
      "source": [
        "def get_gram_cnt(isbn):\n",
        "    # Yes24 도서 검색 페이지 URL\n",
        "    url = 'http://www.yes24.com/Product/Search?domain=BOOK&query={}'\n",
        "    # URL에 ISBN을 넣어 HTML 가져옵니다.\n",
        "    r = requests.get(url.format(isbn))\n",
        "    soup = BeautifulSoup(r.text, 'html.parser')   # HTML 파싱\n",
        "    # 검색 결과에서 해당 도서를 선택합니다.\n",
        "    prd_info = soup.find('a', attrs={'class':'gd_name'})\n",
        "    if prd_info == None:\n",
        "        return ''\n",
        "    # 도서 상세 페이지를 가져옵니다.\n",
        "    url = 'http://www.yes24.com'+prd_info['href']\n",
        "    r = requests.get(url)\n",
        "    soup = BeautifulSoup(r.text, 'html.parser')\n",
        "    # 상품 상세정보 div를 선택합니다.\n",
        "    prd_detail = soup.find('div', attrs={'id':'infoset_specific'})\n",
        "    # 테이블에 있는 tr 태그를 가져옵니다.\n",
        "    prd_tr_list = prd_detail.find_all('tr')\n",
        "    # 쪽수가 들어 있는 th를 찾아 td에 담긴 값을 반환합니다.\n",
        "    for tr in prd_tr_list:\n",
        "        if tr.find('th').get_text() == '쪽수, 무게, 크기':\n",
        "            return tr.find('td').get_text().split()[2]\n",
        "    return ''"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "id": "cd7c9941",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "cd7c9941",
        "outputId": "82647b02-ae9e-4c9e-8c46-a313c8f09173"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-36-c8e0ddc753bd>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mget_gram_cnt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9791190090018\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-11-1f47c671eccd>\u001b[0m in \u001b[0;36mget_gram_cnt\u001b[0;34m(isbn)\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0murl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'http://www.yes24.com/Product/Search?domain=BOOK&query={}'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;31m# URL에 ISBN을 넣어 HTML 가져옵니다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m     \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0misbn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0msoup\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBeautifulSoup\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'html.parser'\u001b[0m\u001b[0;34m)\u001b[0m   \u001b[0;31m# HTML 파싱\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0;31m# 검색 결과에서 해당 도서를 선택합니다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'requests' is not defined"
          ]
        }
      ],
      "source": [
        "get_gram_cnt(9791190090018)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "id": "da739a0a",
      "metadata": {
        "id": "da739a0a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 171
        },
        "outputId": "4909a36a-c78d-4e9d-fceb-a1f93f72ce23"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-35-71417c6b142e>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtop10_books\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbooks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'books' is not defined"
          ]
        }
      ],
      "source": [
        "top10_books = books.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "id": "0bff8104",
      "metadata": {
        "id": "0bff8104"
      },
      "outputs": [],
      "source": [
        "def get_gram_cnt2(row):\n",
        "    isbn = row['isbn13']\n",
        "    return get_gram_cnt(isbn)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "id": "fb638a9b",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 189
        },
        "id": "fb638a9b",
        "outputId": "c9452281-32fc-4098-dee9-2f7ee8cac365"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-37-eef2cf43628b>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgram_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop10_books\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mget_gram_cnt2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgram_count\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'top10_books' is not defined"
          ]
        }
      ],
      "source": [
        "gram_count = top10_books.apply(get_gram_cnt2, axis=1)\n",
        "print(gram_count)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "id": "941aa1d3",
      "metadata": {
        "id": "941aa1d3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 171
        },
        "outputId": "adbadb69-81c9-4256-c9b8-7a8bab676664"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-38-6387cf647d6b>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgram_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop10_books\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mget_gram_cnt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'isbn13'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'top10_books' is not defined"
          ]
        }
      ],
      "source": [
        "gram_count = top10_books.apply(lambda row: get_gram_cnt(row['isbn13']), axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "85375062",
      "metadata": {
        "id": "85375062",
        "scrolled": true
      },
      "outputs": [],
      "source": [
        "gram_count.name = 'gram_count'\n",
        "print(gram_count)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "id": "7ac45b9f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "7ac45b9f",
        "outputId": "7795b84c-64a9-4102-b327-2c48de1c3929",
        "scrolled": true
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-32-3e8f33a38666>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m top10_with_gram_count = pd.merge(top10_books, gram_count, \n\u001b[0m\u001b[1;32m      2\u001b[0m                                  left_index=True, right_index=True)\n\u001b[1;32m      3\u001b[0m \u001b[0mtop10_with_gram_count\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"
          ]
        }
      ],
      "source": [
        "top10_with_gram_count = pd.merge(top10_books, gram_count, \n",
        "                                 left_index=True, right_index=True)\n",
        "top10_with_gram_count"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "7127a78f",
      "metadata": {
        "id": "7127a78f"
      },
      "source": [
        "### 옵션"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "id": "c699ddf2",
      "metadata": {
        "id": "c699ddf2"
      },
      "outputs": [],
      "source": [
        "def get_page_cnt(isbn):\n",
        "    url = 'http://www.yes24.com/Product/Search?domain=BOOK&query={}'\n",
        "    r = requests.get(url.format(isbn))\n",
        "    soup = BeautifulSoup(r.text, 'html.parser')   # HTML 파싱\n",
        "    prd_info = soup.find('a', attrs={'class':'gd_name'})\n",
        "    if prd_info == None:\n",
        "        return ''\n",
        "    url = 'http://www.yes24.com'+prd_info['href']\n",
        "    r = requests.get(url)\n",
        "    soup = BeautifulSoup(r.text, 'html.parser')\n",
        "    prd_detail = soup.find('div', attrs={'id':'infoset_specific'})\n",
        "    prd_tr_list = prd_detail.find_all('tr')\n",
        "    for tr in prd_tr_list:\n",
        "        if tr.find('th').get_text() == '쪽수, 무게, 크기':\n",
        "            return tr.find('td').get_text().split()[0]\n",
        "    return ''"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "id": "64984c70",
      "metadata": {
        "id": "64984c70"
      },
      "outputs": [],
      "source": [
        "def get_page_cnt2(row):\n",
        "    isbn = row['isbn13']\n",
        "    return get_page_cnt(isbn)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "id": "befcaed2",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 189
        },
        "id": "befcaed2",
        "outputId": "6662edf2-0107-4fcc-f07b-990d491d150a",
        "scrolled": true
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-28-2bd6592bb4ea>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpage_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop10_books\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mget_page_cnt2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpage_count\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'top10_books' is not defined"
          ]
        }
      ],
      "source": [
        "page_count = top10_books.apply(get_page_cnt2, axis=1)\n",
        "print(page_count)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "id": "dc28188e",
      "metadata": {
        "id": "dc28188e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 171
        },
        "outputId": "17d49561-d541-4025-c774-7c5755b11b68"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-25-85ccf2ef40ac>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpage_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop10_books\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mget_page_cnt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'isbn13'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'top10_books' is not defined"
          ]
        }
      ],
      "source": [
        "page_count = top10_books.apply(lambda row: get_page_cnt(row['isbn13']), axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "id": "de5d3cae",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 189
        },
        "id": "de5d3cae",
        "outputId": "43d99421-9fb0-48dd-cf28-a47cbb83a554",
        "scrolled": true
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-26-0af17efc16c7>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpage_count\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'page_count'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpage_count\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'page_count' is not defined"
          ]
        }
      ],
      "source": [
        "page_count.name = 'page_count'\n",
        "print(page_count)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "id": "4d747007",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "4d747007",
        "outputId": "94fea952-5d99-44ae-a8fb-c1cc89419c48",
        "scrolled": true
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-27-7e7eedffe8d2>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m top10_with_etc_count = pd.merge(top10_with_gram_count, page_count,\n\u001b[0m\u001b[1;32m      2\u001b[0m                                  left_index=True, right_index=True)\n\u001b[1;32m      3\u001b[0m \u001b[0mtop10_with_etc_count\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"
          ]
        }
      ],
      "source": [
        "top10_with_etc_count = pd.merge(top10_with_gram_count, page_count,\n",
        "                                 left_index=True, right_index=True)\n",
        "top10_with_etc_count"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "id": "4243ada2",
      "metadata": {
        "id": "4243ada2"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.13"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}